// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingApp.Data;

#nullable disable

namespace TrainingApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231001105356_createDataBase")]
    partial class createDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainingApp.Models.CompletedSet", b =>
                {
                    b.Property<int>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SetId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ParentWorkoutSessionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentWorkoutSessionWorkoutId")
                        .HasColumnType("int");

                    b.Property<int?>("Reps")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("SetId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("ParentWorkoutSessionDate", "ParentWorkoutSessionWorkoutId");

                    b.ToTable("CompletedSets");
                });

            modelBuilder.Entity("TrainingApp.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("TrainingApp.Models.ExerciseInWorkout", b =>
                {
                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfReps")
                        .HasColumnType("int");

                    b.Property<int>("NumOfSets")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("RestTime")
                        .HasColumnType("time");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseInWorkouts");
                });

            modelBuilder.Entity("TrainingApp.Models.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("TrainingApp.Models.Session", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.HasKey("Date", "WorkoutId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("TrainingApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TrainingApp.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId");

                    b.HasIndex("PlanId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("TrainingApp.Models.CompletedSet", b =>
                {
                    b.HasOne("TrainingApp.Models.Exercise", "Exercise")
                        .WithMany("CompletedSets")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingApp.Models.Session", "ParentWorkoutSession")
                        .WithMany("CompletedSets")
                        .HasForeignKey("ParentWorkoutSessionDate", "ParentWorkoutSessionWorkoutId");

                    b.Navigation("Exercise");

                    b.Navigation("ParentWorkoutSession");
                });

            modelBuilder.Entity("TrainingApp.Models.Exercise", b =>
                {
                    b.HasOne("TrainingApp.Models.User", "User")
                        .WithMany("Exercises")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrainingApp.Models.ExerciseInWorkout", b =>
                {
                    b.HasOne("TrainingApp.Models.Exercise", "Exercise")
                        .WithMany("ExerciseInWorkouts")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingApp.Models.Workout", "Workout")
                        .WithMany("ExercisesInWorkouts")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("TrainingApp.Models.Plan", b =>
                {
                    b.HasOne("TrainingApp.Models.User", "User")
                        .WithMany("Plans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrainingApp.Models.Session", b =>
                {
                    b.HasOne("TrainingApp.Models.Workout", "Workout")
                        .WithMany("Sessions")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("TrainingApp.Models.Workout", b =>
                {
                    b.HasOne("TrainingApp.Models.Plan", "Plan")
                        .WithMany("Workouts")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("TrainingApp.Models.Exercise", b =>
                {
                    b.Navigation("CompletedSets");

                    b.Navigation("ExerciseInWorkouts");
                });

            modelBuilder.Entity("TrainingApp.Models.Plan", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("TrainingApp.Models.Session", b =>
                {
                    b.Navigation("CompletedSets");
                });

            modelBuilder.Entity("TrainingApp.Models.User", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("Plans");
                });

            modelBuilder.Entity("TrainingApp.Models.Workout", b =>
                {
                    b.Navigation("ExercisesInWorkouts");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
